# GENERATED FILE - DO NOT EDIT.
# GENERATED BY UaaSpringSecurityUtils::ConfigParser
# Config files from: ../../../uaa/uaa/src/main/webapp/**/*.xml
---
- name: userInfoSecurity
  pattern: /userinfo
  create-session: stateless
  authentication-manager:
    id: emptyAuthenticationManager
  entry-point:
    id: oauthAuthenticationEntryPoint
    class: org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint
    property:
      name: realmName
      value: UAA/oauth
  access-decision-manager:
    id: accessDecisionManager
    class: org.springframework.security.access.vote.UnanimousBased
    constructor-arg:
      list:
        bean:
        - class: org.springframework.security.oauth2.provider.vote.ScopeVoter
          property:
            name: scopePrefix
            value: scope=
        - class: org.springframework.security.access.vote.RoleVoter
        - class: org.springframework.security.access.vote.AuthenticatedVoter
  intercept-url:
    pattern: /**
    access: scope=openid
  custom-filter:
    position: PRE_AUTH_FILTER
    id: openidResourceAuthenticationFilter
    token-services:
      id: tokenServices
      class: org.cloudfoundry.identity.uaa.oauth.token.UaaTokenServices
      property:
      - name: clientDetailsService
        id: jdbcClientDetailsService
        class: org.springframework.security.oauth2.provider.JdbcClientDetailsService
        constructor-arg:
          dataSource: OMITTED
        property:
          name: passwordEncoder
          id: bcryptPasswordEncoder
          class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
      - name: userDatabase
        id: userDatabase
        class: org.cloudfoundry.identity.uaa.user.JdbcUaaUserDatabase
        constructor-arg:
          id: jdbcTemplate
          class: org.springframework.jdbc.core.JdbcTemplate
          property:
            name: dataSource
            dataSource: OMITTED
        property:
        - name: defaultAuthorities
          id: defaultUserAuthorities
          set-class: java.util.HashSet
          value:
          - text: openid
          - text: scim.me
          - text: cloud_controller.read
          - text: cloud_controller.write
          - text: password.write
          - text: scim.userids
          - text: uaa.user
          - text: approvals.me
        - name: userAuthoritiesQuery
          value:
            text: select g.displayName from groups g, group_membership m where g.id
              = m.group_id and m.member_id = ?
      - name: signerProvider
        id: signerProvider
        class: org.cloudfoundry.identity.uaa.oauth.token.SignerProvider
        property:
        - name: signingKey
          value: ${jwt.token.signing-key:tokenkey}
        - name: verifierKey
          value: ${jwt.token.verification-key:tokenkey}
      - name: defaultUserAuthorities
        id: defaultUserAuthorities
        set-class: java.util.HashSet
        value:
        - text: openid
        - text: scim.me
        - text: cloud_controller.read
        - text: cloud_controller.write
        - text: password.write
        - text: scim.userids
        - text: uaa.user
        - text: approvals.me
      - name: issuer
        value: ${issuer.uri:http://localhost:8080/uaa}
      - name: approvalStore
        id: approvalStore
        class: org.cloudfoundry.identity.uaa.oauth.approval.JdbcApprovalStore
        constructor-arg:
        - id: jdbcTemplate
          class: org.springframework.jdbc.core.JdbcTemplate
          property:
            name: dataSource
            dataSource: OMITTED
        - id: jdbcPagingListFactory
          class: org.cloudfoundry.identity.uaa.rest.jdbc.JdbcPagingListFactory
          constructor-arg:
          - id: jdbcTemplate
            class: org.springframework.jdbc.core.JdbcTemplate
            property:
              name: dataSource
              dataSource: OMITTED
          - id: limitSqlAdapter
            class: org.cloudfoundry.identity.uaa.rest.jdbc.OracleLimitSqlAdapter
        - bean:
            class: org.cloudfoundry.identity.uaa.scim.jdbc.ScimSearchQueryConverter
    resource-id: openid
    entry-point:
      id: oauthAuthenticationEntryPoint
      class: org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint
      property:
        name: realmName
        value: UAA/oauth
  access-denied-handler:
    id: oauthAccessDeniedHandler
    class: org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler
- name: tokenEndpointSecurity
  create-session: stateless
  authentication-manager:
    id: clientAuthenticationManager
    authentication-provider:
      user-service:
        id: clientDetailsUserService
        class: org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService
        constructor-arg:
          id: jdbcClientDetailsService
          class: org.springframework.security.oauth2.provider.JdbcClientDetailsService
          constructor-arg:
            dataSource: OMITTED
          property:
            name: passwordEncoder
            id: bcryptPasswordEncoder
            class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
        property:
          name: passwordEncoder
          id: bcryptPasswordEncoder
          class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
      password-encoder:
        id: bcryptPasswordEncoder
        class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
  request-matcher:
    id: oauthTokenMatcher
    class: org.cloudfoundry.identity.uaa.security.web.UaaRequestMatcher
    constructor-arg:
      value: /oauth/token
    property:
      name: headers
      map:
        entry:
          key: authorization
          list:
            value:
              text: ! 'Basic '
  entry-point:
    id: basicAuthenticationEntryPoint
    class: org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint
    property:
    - name: realmName
      value: UAA/client
    - name: typeName
      value: Basic
  intercept-url:
    pattern: /**
    access: IS_AUTHENTICATED_FULLY
  anonymous:
    enabled: 'false'
  custom-filter:
  - position: BASIC_AUTH_FILTER
    id: clientAuthenticationFilter
    class: org.springframework.security.web.authentication.www.BasicAuthenticationFilter
    constructor-arg:
    - id: clientAuthenticationManager
      authentication-provider:
        user-service:
          id: clientDetailsUserService
          class: org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService
          constructor-arg:
            id: jdbcClientDetailsService
            class: org.springframework.security.oauth2.provider.JdbcClientDetailsService
            constructor-arg:
              dataSource: OMITTED
            property:
              name: passwordEncoder
              id: bcryptPasswordEncoder
              class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
          property:
            name: passwordEncoder
            id: bcryptPasswordEncoder
            class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
        password-encoder:
          id: bcryptPasswordEncoder
          class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
    - id: basicAuthenticationEntryPoint
      class: org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint
      property:
      - name: realmName
        value: UAA/client
      - name: typeName
        value: Basic
    property:
      name: authenticationDetailsSource
      id: authenticationDetailsSource
      class: org.cloudfoundry.identity.uaa.authentication.UaaAuthenticationDetailsSource
  - after: BASIC_AUTH_FILTER
    id: tokenEndpointAuthenticationFilter
    class: org.springframework.security.oauth2.provider.endpoint.TokenEndpointAuthenticationFilter
    constructor-arg:
      id: authzAuthenticationMgr
      class: org.cloudfoundry.identity.uaa.authentication.manager.AuthzAuthenticationManager
      constructor-arg:
        id: userDatabase
        class: org.cloudfoundry.identity.uaa.user.JdbcUaaUserDatabase
        constructor-arg:
          id: jdbcTemplate
          class: org.springframework.jdbc.core.JdbcTemplate
          property:
            name: dataSource
            dataSource: OMITTED
        property:
        - name: defaultAuthorities
          id: defaultUserAuthorities
          set-class: java.util.HashSet
          value:
          - text: openid
          - text: scim.me
          - text: cloud_controller.read
          - text: cloud_controller.write
          - text: password.write
          - text: scim.userids
          - text: uaa.user
          - text: approvals.me
        - name: userAuthoritiesQuery
          value:
            text: select g.displayName from groups g, group_membership m where g.id
              = m.group_id and m.member_id = ?
      property:
        name: accountLoginPolicy
        bean:
          class: org.cloudfoundry.identity.uaa.authentication.manager.PeriodLockoutPolicy
          constructor-arg:
            id: jdbcAuditService
            class: org.cloudfoundry.identity.uaa.audit.JdbcFailedLoginCountingAuditService
            constructor-arg:
              dataSource: OMITTED
          property:
          - name: lockoutAfterFailures
            value: '5'
          - name: lockoutPeriodSeconds
            value: '300'
    property:
      name: authenticationDetailsSource
      id: authenticationDetailsSource
      class: org.cloudfoundry.identity.uaa.authentication.UaaAuthenticationDetailsSource
  access-denied-handler:
    id: oauthAccessDeniedHandler
    class: org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler
- name: tokenEndpointSecurityForAuthServers
  create-session: stateless
  authentication-manager:
    id: clientAuthenticationManager
    authentication-provider:
      user-service:
        id: clientDetailsUserService
        class: org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService
        constructor-arg:
          id: jdbcClientDetailsService
          class: org.springframework.security.oauth2.provider.JdbcClientDetailsService
          constructor-arg:
            dataSource: OMITTED
          property:
            name: passwordEncoder
            id: bcryptPasswordEncoder
            class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
        property:
          name: passwordEncoder
          id: bcryptPasswordEncoder
          class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
      password-encoder:
        id: bcryptPasswordEncoder
        class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
  request-matcher:
    id: oauthBearerTokenMatcher
    class: org.cloudfoundry.identity.uaa.security.web.UaaRequestMatcher
    constructor-arg:
      value: /oauth/token
    property:
      name: headers
      map:
        entry:
          key: authorization
          list:
            value:
              text: ! 'Bearer '
  entry-point:
    id: oauthAuthenticationEntryPoint
    class: org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint
    property:
      name: realmName
      value: UAA/oauth
  intercept-url:
    pattern: /**
    access: IS_AUTHENTICATED_FULLY
  anonymous:
    enabled: 'false'
  custom-filter:
  - position: PRE_AUTH_FILTER
    id: oauthResourceAuthenticationFilter
    token-services:
      id: tokenServices
      class: org.cloudfoundry.identity.uaa.oauth.token.UaaTokenServices
      property:
      - name: clientDetailsService
        id: jdbcClientDetailsService
        class: org.springframework.security.oauth2.provider.JdbcClientDetailsService
        constructor-arg:
          dataSource: OMITTED
        property:
          name: passwordEncoder
          id: bcryptPasswordEncoder
          class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
      - name: userDatabase
        id: userDatabase
        class: org.cloudfoundry.identity.uaa.user.JdbcUaaUserDatabase
        constructor-arg:
          id: jdbcTemplate
          class: org.springframework.jdbc.core.JdbcTemplate
          property:
            name: dataSource
            dataSource: OMITTED
        property:
        - name: defaultAuthorities
          id: defaultUserAuthorities
          set-class: java.util.HashSet
          value:
          - text: openid
          - text: scim.me
          - text: cloud_controller.read
          - text: cloud_controller.write
          - text: password.write
          - text: scim.userids
          - text: uaa.user
          - text: approvals.me
        - name: userAuthoritiesQuery
          value:
            text: select g.displayName from groups g, group_membership m where g.id
              = m.group_id and m.member_id = ?
      - name: signerProvider
        id: signerProvider
        class: org.cloudfoundry.identity.uaa.oauth.token.SignerProvider
        property:
        - name: signingKey
          value: ${jwt.token.signing-key:tokenkey}
        - name: verifierKey
          value: ${jwt.token.verification-key:tokenkey}
      - name: defaultUserAuthorities
        id: defaultUserAuthorities
        set-class: java.util.HashSet
        value:
        - text: openid
        - text: scim.me
        - text: cloud_controller.read
        - text: cloud_controller.write
        - text: password.write
        - text: scim.userids
        - text: uaa.user
        - text: approvals.me
      - name: issuer
        value: ${issuer.uri:http://localhost:8080/uaa}
      - name: approvalStore
        id: approvalStore
        class: org.cloudfoundry.identity.uaa.oauth.approval.JdbcApprovalStore
        constructor-arg:
        - id: jdbcTemplate
          class: org.springframework.jdbc.core.JdbcTemplate
          property:
            name: dataSource
            dataSource: OMITTED
        - id: jdbcPagingListFactory
          class: org.cloudfoundry.identity.uaa.rest.jdbc.JdbcPagingListFactory
          constructor-arg:
          - id: jdbcTemplate
            class: org.springframework.jdbc.core.JdbcTemplate
            property:
              name: dataSource
              dataSource: OMITTED
          - id: limitSqlAdapter
            class: org.cloudfoundry.identity.uaa.rest.jdbc.OracleLimitSqlAdapter
        - bean:
            class: org.cloudfoundry.identity.uaa.scim.jdbc.ScimSearchQueryConverter
    resource-id: oauth
    entry-point:
      id: oauthAuthenticationEntryPoint
      class: org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint
      property:
        name: realmName
        value: UAA/oauth
  - after: PRE_AUTH_FILTER
    id: authServerAuthenticationFilter
    class: org.cloudfoundry.identity.uaa.authentication.manager.LoginAuthenticationFilter
    constructor-arg:
    - id: loginAuthenticationMgr
      class: org.cloudfoundry.identity.uaa.authentication.manager.LoginAuthenticationManager
      property:
      - name: addNewAccounts
        value: ${login.addnew:true}
      - name: userDatabase
        id: userDatabase
        class: org.cloudfoundry.identity.uaa.user.JdbcUaaUserDatabase
        constructor-arg:
          id: jdbcTemplate
          class: org.springframework.jdbc.core.JdbcTemplate
          property:
            name: dataSource
            dataSource: OMITTED
        property:
        - name: defaultAuthorities
          id: defaultUserAuthorities
          set-class: java.util.HashSet
          value:
          - text: openid
          - text: scim.me
          - text: cloud_controller.read
          - text: cloud_controller.write
          - text: password.write
          - text: scim.userids
          - text: uaa.user
          - text: approvals.me
        - name: userAuthoritiesQuery
          value:
            text: select g.displayName from groups g, group_membership m where g.id
              = m.group_id and m.member_id = ?
    - id: jdbcClientDetailsService
      class: org.springframework.security.oauth2.provider.JdbcClientDetailsService
      constructor-arg:
        dataSource: OMITTED
      property:
        name: passwordEncoder
        id: bcryptPasswordEncoder
        class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
    property:
      name: parameterNames
      list:
        value:
          text: username
  access-denied-handler:
    id: oauthAccessDeniedHandler
    class: org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler
- name: statelessAuthzEndpointSecurity
  request-matcher:
    id: oauthAuthorizeRequestMatcher
    class: org.cloudfoundry.identity.uaa.security.web.UaaRequestMatcher
    constructor-arg:
      value: /oauth/authorize
    property:
    - name: accept
      list:
        value:
        - text: application/json
        - text: application/x-www-form-urlencoded
    - name: parameters
      map:
        entry:
        - key: response_type
          value: token
        - key: source
          value: credentials
  create-session: stateless
  entry-point:
    id: oauthAuthenticationEntryPoint
    class: org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint
    property:
      name: realmName
      value: UAA/oauth
  authentication-manager:
    id: authzAuthenticationMgr
    class: org.cloudfoundry.identity.uaa.authentication.manager.AuthzAuthenticationManager
    constructor-arg:
      id: userDatabase
      class: org.cloudfoundry.identity.uaa.user.JdbcUaaUserDatabase
      constructor-arg:
        id: jdbcTemplate
        class: org.springframework.jdbc.core.JdbcTemplate
        property:
          name: dataSource
          dataSource: OMITTED
      property:
      - name: defaultAuthorities
        id: defaultUserAuthorities
        set-class: java.util.HashSet
        value:
        - text: openid
        - text: scim.me
        - text: cloud_controller.read
        - text: cloud_controller.write
        - text: password.write
        - text: scim.userids
        - text: uaa.user
        - text: approvals.me
      - name: userAuthoritiesQuery
        value:
          text: select g.displayName from groups g, group_membership m where g.id
            = m.group_id and m.member_id = ?
    property:
      name: accountLoginPolicy
      bean:
        class: org.cloudfoundry.identity.uaa.authentication.manager.PeriodLockoutPolicy
        constructor-arg:
          id: jdbcAuditService
          class: org.cloudfoundry.identity.uaa.audit.JdbcFailedLoginCountingAuditService
          constructor-arg:
            dataSource: OMITTED
        property:
        - name: lockoutAfterFailures
          value: '5'
        - name: lockoutPeriodSeconds
          value: '300'
  intercept-url:
    pattern: /**
    access: IS_AUTHENTICATED_FULLY
  custom-filter:
    position: FORM_LOGIN_FILTER
    id: authzAuthenticationFilter
    class: org.cloudfoundry.identity.uaa.authentication.AuthzAuthenticationFilter
    constructor-arg:
      id: authzAuthenticationMgr
      class: org.cloudfoundry.identity.uaa.authentication.manager.AuthzAuthenticationManager
      constructor-arg:
        id: userDatabase
        class: org.cloudfoundry.identity.uaa.user.JdbcUaaUserDatabase
        constructor-arg:
          id: jdbcTemplate
          class: org.springframework.jdbc.core.JdbcTemplate
          property:
            name: dataSource
            dataSource: OMITTED
        property:
        - name: defaultAuthorities
          id: defaultUserAuthorities
          set-class: java.util.HashSet
          value:
          - text: openid
          - text: scim.me
          - text: cloud_controller.read
          - text: cloud_controller.write
          - text: password.write
          - text: scim.userids
          - text: uaa.user
          - text: approvals.me
        - name: userAuthoritiesQuery
          value:
            text: select g.displayName from groups g, group_membership m where g.id
              = m.group_id and m.member_id = ?
      property:
        name: accountLoginPolicy
        bean:
          class: org.cloudfoundry.identity.uaa.authentication.manager.PeriodLockoutPolicy
          constructor-arg:
            id: jdbcAuditService
            class: org.cloudfoundry.identity.uaa.audit.JdbcFailedLoginCountingAuditService
            constructor-arg:
              dataSource: OMITTED
          property:
          - name: lockoutAfterFailures
            value: '5'
          - name: lockoutPeriodSeconds
            value: '300'
    property:
      name: parameterNames
      list:
        value:
        - text: username
        - text: password
        - text: passcode
        - text: credentials
  anonymous:
    enabled: 'false'
  access-denied-handler:
    id: oauthAccessDeniedHandler
    class: org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler
- name: oldAuthzEndpointSecurity
  request-matcher:
    id: oauthAuthorizeRequestMatcherOld
    class: org.cloudfoundry.identity.uaa.security.web.UaaRequestMatcher
    constructor-arg:
      value: /oauth/authorize
    property:
    - name: accept
      list:
        value:
        - text: application/json
        - text: application/x-www-form-urlencoded
    - name: parameters
      map:
        entry:
        - key: response_type
          value: token
        - key: credentials
          value: ! '{'
  create-session: stateless
  entry-point:
    id: oauthAuthenticationEntryPoint
    class: org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint
    property:
      name: realmName
      value: UAA/oauth
  authentication-manager:
    id: authzAuthenticationMgr
    class: org.cloudfoundry.identity.uaa.authentication.manager.AuthzAuthenticationManager
    constructor-arg:
      id: userDatabase
      class: org.cloudfoundry.identity.uaa.user.JdbcUaaUserDatabase
      constructor-arg:
        id: jdbcTemplate
        class: org.springframework.jdbc.core.JdbcTemplate
        property:
          name: dataSource
          dataSource: OMITTED
      property:
      - name: defaultAuthorities
        id: defaultUserAuthorities
        set-class: java.util.HashSet
        value:
        - text: openid
        - text: scim.me
        - text: cloud_controller.read
        - text: cloud_controller.write
        - text: password.write
        - text: scim.userids
        - text: uaa.user
        - text: approvals.me
      - name: userAuthoritiesQuery
        value:
          text: select g.displayName from groups g, group_membership m where g.id
            = m.group_id and m.member_id = ?
    property:
      name: accountLoginPolicy
      bean:
        class: org.cloudfoundry.identity.uaa.authentication.manager.PeriodLockoutPolicy
        constructor-arg:
          id: jdbcAuditService
          class: org.cloudfoundry.identity.uaa.audit.JdbcFailedLoginCountingAuditService
          constructor-arg:
            dataSource: OMITTED
        property:
        - name: lockoutAfterFailures
          value: '5'
        - name: lockoutPeriodSeconds
          value: '300'
  intercept-url:
    pattern: /**
    access: IS_AUTHENTICATED_FULLY
  custom-filter:
    position: FORM_LOGIN_FILTER
    id: authzAuthenticationFilter
    class: org.cloudfoundry.identity.uaa.authentication.AuthzAuthenticationFilter
    constructor-arg:
      id: authzAuthenticationMgr
      class: org.cloudfoundry.identity.uaa.authentication.manager.AuthzAuthenticationManager
      constructor-arg:
        id: userDatabase
        class: org.cloudfoundry.identity.uaa.user.JdbcUaaUserDatabase
        constructor-arg:
          id: jdbcTemplate
          class: org.springframework.jdbc.core.JdbcTemplate
          property:
            name: dataSource
            dataSource: OMITTED
        property:
        - name: defaultAuthorities
          id: defaultUserAuthorities
          set-class: java.util.HashSet
          value:
          - text: openid
          - text: scim.me
          - text: cloud_controller.read
          - text: cloud_controller.write
          - text: password.write
          - text: scim.userids
          - text: uaa.user
          - text: approvals.me
        - name: userAuthoritiesQuery
          value:
            text: select g.displayName from groups g, group_membership m where g.id
              = m.group_id and m.member_id = ?
      property:
        name: accountLoginPolicy
        bean:
          class: org.cloudfoundry.identity.uaa.authentication.manager.PeriodLockoutPolicy
          constructor-arg:
            id: jdbcAuditService
            class: org.cloudfoundry.identity.uaa.audit.JdbcFailedLoginCountingAuditService
            constructor-arg:
              dataSource: OMITTED
          property:
          - name: lockoutAfterFailures
            value: '5'
          - name: lockoutPeriodSeconds
            value: '300'
    property:
      name: parameterNames
      list:
        value:
        - text: username
        - text: password
        - text: passcode
        - text: credentials
  anonymous:
    enabled: 'false'
  access-denied-handler:
    id: oauthAccessDeniedHandler
    class: org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler
- pattern: /authenticate/**
  security: none
- request-matcher:
    id: loginAuthorizeRequestMatcher
    class: org.cloudfoundry.identity.uaa.security.web.UaaRequestMatcher
    constructor-arg:
      value: /oauth/authorize
    property:
    - name: accept
      value: application/json
    - name: parameters
      map:
        entry:
          key: source
          value: login
  create-session: always
  entry-point:
    id: oauthAuthenticationEntryPoint
    class: org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint
    property:
      name: realmName
      value: UAA/oauth
  authentication-manager:
    id: loginAuthenticationMgr
    class: org.cloudfoundry.identity.uaa.authentication.manager.LoginAuthenticationManager
    property:
    - name: addNewAccounts
      value: ${login.addnew:true}
    - name: userDatabase
      id: userDatabase
      class: org.cloudfoundry.identity.uaa.user.JdbcUaaUserDatabase
      constructor-arg:
        id: jdbcTemplate
        class: org.springframework.jdbc.core.JdbcTemplate
        property:
          name: dataSource
          dataSource: OMITTED
      property:
      - name: defaultAuthorities
        id: defaultUserAuthorities
        set-class: java.util.HashSet
        value:
        - text: openid
        - text: scim.me
        - text: cloud_controller.read
        - text: cloud_controller.write
        - text: password.write
        - text: scim.userids
        - text: uaa.user
        - text: approvals.me
      - name: userAuthoritiesQuery
        value:
          text: select g.displayName from groups g, group_membership m where g.id
            = m.group_id and m.member_id = ?
  intercept-url:
    pattern: /**
    access: IS_AUTHENTICATED_FULLY
  custom-filter:
  - position: PRE_AUTH_FILTER
    id: oauthResourceAuthenticationFilter
    token-services:
      id: tokenServices
      class: org.cloudfoundry.identity.uaa.oauth.token.UaaTokenServices
      property:
      - name: clientDetailsService
        id: jdbcClientDetailsService
        class: org.springframework.security.oauth2.provider.JdbcClientDetailsService
        constructor-arg:
          dataSource: OMITTED
        property:
          name: passwordEncoder
          id: bcryptPasswordEncoder
          class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
      - name: userDatabase
        id: userDatabase
        class: org.cloudfoundry.identity.uaa.user.JdbcUaaUserDatabase
        constructor-arg:
          id: jdbcTemplate
          class: org.springframework.jdbc.core.JdbcTemplate
          property:
            name: dataSource
            dataSource: OMITTED
        property:
        - name: defaultAuthorities
          id: defaultUserAuthorities
          set-class: java.util.HashSet
          value:
          - text: openid
          - text: scim.me
          - text: cloud_controller.read
          - text: cloud_controller.write
          - text: password.write
          - text: scim.userids
          - text: uaa.user
          - text: approvals.me
        - name: userAuthoritiesQuery
          value:
            text: select g.displayName from groups g, group_membership m where g.id
              = m.group_id and m.member_id = ?
      - name: signerProvider
        id: signerProvider
        class: org.cloudfoundry.identity.uaa.oauth.token.SignerProvider
        property:
        - name: signingKey
          value: ${jwt.token.signing-key:tokenkey}
        - name: verifierKey
          value: ${jwt.token.verification-key:tokenkey}
      - name: defaultUserAuthorities
        id: defaultUserAuthorities
        set-class: java.util.HashSet
        value:
        - text: openid
        - text: scim.me
        - text: cloud_controller.read
        - text: cloud_controller.write
        - text: password.write
        - text: scim.userids
        - text: uaa.user
        - text: approvals.me
      - name: issuer
        value: ${issuer.uri:http://localhost:8080/uaa}
      - name: approvalStore
        id: approvalStore
        class: org.cloudfoundry.identity.uaa.oauth.approval.JdbcApprovalStore
        constructor-arg:
        - id: jdbcTemplate
          class: org.springframework.jdbc.core.JdbcTemplate
          property:
            name: dataSource
            dataSource: OMITTED
        - id: jdbcPagingListFactory
          class: org.cloudfoundry.identity.uaa.rest.jdbc.JdbcPagingListFactory
          constructor-arg:
          - id: jdbcTemplate
            class: org.springframework.jdbc.core.JdbcTemplate
            property:
              name: dataSource
              dataSource: OMITTED
          - id: limitSqlAdapter
            class: org.cloudfoundry.identity.uaa.rest.jdbc.OracleLimitSqlAdapter
        - bean:
            class: org.cloudfoundry.identity.uaa.scim.jdbc.ScimSearchQueryConverter
    resource-id: oauth
    entry-point:
      id: oauthAuthenticationEntryPoint
      class: org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint
      property:
        name: realmName
        value: UAA/oauth
  - position: FORM_LOGIN_FILTER
    id: loginAuthenticationFilter
    class: org.cloudfoundry.identity.uaa.authentication.AuthzAuthenticationFilter
    constructor-arg:
      id: loginAuthenticationMgr
      class: org.cloudfoundry.identity.uaa.authentication.manager.LoginAuthenticationManager
      property:
      - name: addNewAccounts
        value: ${login.addnew:true}
      - name: userDatabase
        id: userDatabase
        class: org.cloudfoundry.identity.uaa.user.JdbcUaaUserDatabase
        constructor-arg:
          id: jdbcTemplate
          class: org.springframework.jdbc.core.JdbcTemplate
          property:
            name: dataSource
            dataSource: OMITTED
        property:
        - name: defaultAuthorities
          id: defaultUserAuthorities
          set-class: java.util.HashSet
          value:
          - text: openid
          - text: scim.me
          - text: cloud_controller.read
          - text: cloud_controller.write
          - text: password.write
          - text: scim.userids
          - text: uaa.user
          - text: approvals.me
        - name: userAuthoritiesQuery
          value:
            text: select g.displayName from groups g, group_membership m where g.id
              = m.group_id and m.member_id = ?
    property:
      name: parameterNames
      list:
        value:
        - text: login
        - text: username
        - text: given_name
        - text: family_name
        - text: email
        - text: authorities
  anonymous:
    enabled: 'false'
  access-denied-handler:
    id: oauthAccessDeniedHandler
    class: org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler
- request-matcher:
    id: loginAuthorizeRequestMatcherOld
    class: org.cloudfoundry.identity.uaa.security.web.UaaRequestMatcher
    constructor-arg:
      value: /oauth/authorize
    property:
    - name: accept
      value: application/json
    - name: parameters
      map:
        entry:
          key: login
          value: ! '{'
  create-session: always
  entry-point:
    id: oauthAuthenticationEntryPoint
    class: org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint
    property:
      name: realmName
      value: UAA/oauth
  authentication-manager:
    id: loginAuthenticationMgr
    class: org.cloudfoundry.identity.uaa.authentication.manager.LoginAuthenticationManager
    property:
    - name: addNewAccounts
      value: ${login.addnew:true}
    - name: userDatabase
      id: userDatabase
      class: org.cloudfoundry.identity.uaa.user.JdbcUaaUserDatabase
      constructor-arg:
        id: jdbcTemplate
        class: org.springframework.jdbc.core.JdbcTemplate
        property:
          name: dataSource
          dataSource: OMITTED
      property:
      - name: defaultAuthorities
        id: defaultUserAuthorities
        set-class: java.util.HashSet
        value:
        - text: openid
        - text: scim.me
        - text: cloud_controller.read
        - text: cloud_controller.write
        - text: password.write
        - text: scim.userids
        - text: uaa.user
        - text: approvals.me
      - name: userAuthoritiesQuery
        value:
          text: select g.displayName from groups g, group_membership m where g.id
            = m.group_id and m.member_id = ?
  intercept-url:
    pattern: /**
    access: IS_AUTHENTICATED_FULLY
  custom-filter:
  - position: PRE_AUTH_FILTER
    id: oauthResourceAuthenticationFilter
    token-services:
      id: tokenServices
      class: org.cloudfoundry.identity.uaa.oauth.token.UaaTokenServices
      property:
      - name: clientDetailsService
        id: jdbcClientDetailsService
        class: org.springframework.security.oauth2.provider.JdbcClientDetailsService
        constructor-arg:
          dataSource: OMITTED
        property:
          name: passwordEncoder
          id: bcryptPasswordEncoder
          class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
      - name: userDatabase
        id: userDatabase
        class: org.cloudfoundry.identity.uaa.user.JdbcUaaUserDatabase
        constructor-arg:
          id: jdbcTemplate
          class: org.springframework.jdbc.core.JdbcTemplate
          property:
            name: dataSource
            dataSource: OMITTED
        property:
        - name: defaultAuthorities
          id: defaultUserAuthorities
          set-class: java.util.HashSet
          value:
          - text: openid
          - text: scim.me
          - text: cloud_controller.read
          - text: cloud_controller.write
          - text: password.write
          - text: scim.userids
          - text: uaa.user
          - text: approvals.me
        - name: userAuthoritiesQuery
          value:
            text: select g.displayName from groups g, group_membership m where g.id
              = m.group_id and m.member_id = ?
      - name: signerProvider
        id: signerProvider
        class: org.cloudfoundry.identity.uaa.oauth.token.SignerProvider
        property:
        - name: signingKey
          value: ${jwt.token.signing-key:tokenkey}
        - name: verifierKey
          value: ${jwt.token.verification-key:tokenkey}
      - name: defaultUserAuthorities
        id: defaultUserAuthorities
        set-class: java.util.HashSet
        value:
        - text: openid
        - text: scim.me
        - text: cloud_controller.read
        - text: cloud_controller.write
        - text: password.write
        - text: scim.userids
        - text: uaa.user
        - text: approvals.me
      - name: issuer
        value: ${issuer.uri:http://localhost:8080/uaa}
      - name: approvalStore
        id: approvalStore
        class: org.cloudfoundry.identity.uaa.oauth.approval.JdbcApprovalStore
        constructor-arg:
        - id: jdbcTemplate
          class: org.springframework.jdbc.core.JdbcTemplate
          property:
            name: dataSource
            dataSource: OMITTED
        - id: jdbcPagingListFactory
          class: org.cloudfoundry.identity.uaa.rest.jdbc.JdbcPagingListFactory
          constructor-arg:
          - id: jdbcTemplate
            class: org.springframework.jdbc.core.JdbcTemplate
            property:
              name: dataSource
              dataSource: OMITTED
          - id: limitSqlAdapter
            class: org.cloudfoundry.identity.uaa.rest.jdbc.OracleLimitSqlAdapter
        - bean:
            class: org.cloudfoundry.identity.uaa.scim.jdbc.ScimSearchQueryConverter
    resource-id: oauth
    entry-point:
      id: oauthAuthenticationEntryPoint
      class: org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint
      property:
        name: realmName
        value: UAA/oauth
  - position: FORM_LOGIN_FILTER
    id: loginAuthenticationFilter
    class: org.cloudfoundry.identity.uaa.authentication.AuthzAuthenticationFilter
    constructor-arg:
      id: loginAuthenticationMgr
      class: org.cloudfoundry.identity.uaa.authentication.manager.LoginAuthenticationManager
      property:
      - name: addNewAccounts
        value: ${login.addnew:true}
      - name: userDatabase
        id: userDatabase
        class: org.cloudfoundry.identity.uaa.user.JdbcUaaUserDatabase
        constructor-arg:
          id: jdbcTemplate
          class: org.springframework.jdbc.core.JdbcTemplate
          property:
            name: dataSource
            dataSource: OMITTED
        property:
        - name: defaultAuthorities
          id: defaultUserAuthorities
          set-class: java.util.HashSet
          value:
          - text: openid
          - text: scim.me
          - text: cloud_controller.read
          - text: cloud_controller.write
          - text: password.write
          - text: scim.userids
          - text: uaa.user
          - text: approvals.me
        - name: userAuthoritiesQuery
          value:
            text: select g.displayName from groups g, group_membership m where g.id
              = m.group_id and m.member_id = ?
    property:
      name: parameterNames
      list:
        value:
        - text: login
        - text: username
        - text: given_name
        - text: family_name
        - text: email
        - text: authorities
  anonymous:
    enabled: 'false'
  access-denied-handler:
    id: oauthAccessDeniedHandler
    class: org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler
- name: clientSecretSecurity
  pattern: /oauth/clients/*/secret
  create-session: stateless
  authentication-manager:
    id: emptyAuthenticationManager
  entry-point:
    id: oauthAuthenticationEntryPoint
    class: org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint
    property:
      name: realmName
      value: UAA/oauth
  access-decision-manager:
    id: accessDecisionManager
    class: org.springframework.security.access.vote.UnanimousBased
    constructor-arg:
      list:
        bean:
        - class: org.springframework.security.oauth2.provider.vote.ScopeVoter
          property:
            name: scopePrefix
            value: scope=
        - class: org.springframework.security.access.vote.RoleVoter
        - class: org.springframework.security.access.vote.AuthenticatedVoter
  intercept-url:
    pattern: /oauth/clients/*/secret
    access: IS_AUTHENTICATED_FULLY,scope=clients.secret
  custom-filter:
    position: PRE_AUTH_FILTER
    id: clientResourceAuthenticationFilter
    token-services:
      id: tokenServices
      class: org.cloudfoundry.identity.uaa.oauth.token.UaaTokenServices
      property:
      - name: clientDetailsService
        id: jdbcClientDetailsService
        class: org.springframework.security.oauth2.provider.JdbcClientDetailsService
        constructor-arg:
          dataSource: OMITTED
        property:
          name: passwordEncoder
          id: bcryptPasswordEncoder
          class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
      - name: userDatabase
        id: userDatabase
        class: org.cloudfoundry.identity.uaa.user.JdbcUaaUserDatabase
        constructor-arg:
          id: jdbcTemplate
          class: org.springframework.jdbc.core.JdbcTemplate
          property:
            name: dataSource
            dataSource: OMITTED
        property:
        - name: defaultAuthorities
          id: defaultUserAuthorities
          set-class: java.util.HashSet
          value:
          - text: openid
          - text: scim.me
          - text: cloud_controller.read
          - text: cloud_controller.write
          - text: password.write
          - text: scim.userids
          - text: uaa.user
          - text: approvals.me
        - name: userAuthoritiesQuery
          value:
            text: select g.displayName from groups g, group_membership m where g.id
              = m.group_id and m.member_id = ?
      - name: signerProvider
        id: signerProvider
        class: org.cloudfoundry.identity.uaa.oauth.token.SignerProvider
        property:
        - name: signingKey
          value: ${jwt.token.signing-key:tokenkey}
        - name: verifierKey
          value: ${jwt.token.verification-key:tokenkey}
      - name: defaultUserAuthorities
        id: defaultUserAuthorities
        set-class: java.util.HashSet
        value:
        - text: openid
        - text: scim.me
        - text: cloud_controller.read
        - text: cloud_controller.write
        - text: password.write
        - text: scim.userids
        - text: uaa.user
        - text: approvals.me
      - name: issuer
        value: ${issuer.uri:http://localhost:8080/uaa}
      - name: approvalStore
        id: approvalStore
        class: org.cloudfoundry.identity.uaa.oauth.approval.JdbcApprovalStore
        constructor-arg:
        - id: jdbcTemplate
          class: org.springframework.jdbc.core.JdbcTemplate
          property:
            name: dataSource
            dataSource: OMITTED
        - id: jdbcPagingListFactory
          class: org.cloudfoundry.identity.uaa.rest.jdbc.JdbcPagingListFactory
          constructor-arg:
          - id: jdbcTemplate
            class: org.springframework.jdbc.core.JdbcTemplate
            property:
              name: dataSource
              dataSource: OMITTED
          - id: limitSqlAdapter
            class: org.cloudfoundry.identity.uaa.rest.jdbc.OracleLimitSqlAdapter
        - bean:
            class: org.cloudfoundry.identity.uaa.scim.jdbc.ScimSearchQueryConverter
    resource-id: clients
    entry-point:
      id: oauthAuthenticationEntryPoint
      class: org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint
      property:
        name: realmName
        value: UAA/oauth
  access-denied-handler:
    id: oauthAccessDeniedHandler
    class: org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler
- name: clientAdminSecurity
  pattern: /oauth/clients/**
  create-session: stateless
  entry-point:
    id: oauthAuthenticationEntryPoint
    class: org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint
    property:
      name: realmName
      value: UAA/oauth
  use-expressions: 'true'
  authentication-manager:
    id: emptyAuthenticationManager
  intercept-url:
  - pattern: /**
    access: ! '#oauth2.hasScope(''clients.write'')'
    method: DELETE
  - pattern: /**
    access: ! '#oauth2.hasScope(''clients.write'')'
    method: POST
  - pattern: /**
    access: ! '#oauth2.hasScope(''clients.write'')'
    method: PUT
  - pattern: /**
    access: ! '#oauth2.hasScope(''clients.read'')'
    method: GET
  custom-filter:
    before: PRE_AUTH_FILTER
    id: clientResourceAuthenticationFilter
    token-services:
      id: tokenServices
      class: org.cloudfoundry.identity.uaa.oauth.token.UaaTokenServices
      property:
      - name: clientDetailsService
        id: jdbcClientDetailsService
        class: org.springframework.security.oauth2.provider.JdbcClientDetailsService
        constructor-arg:
          dataSource: OMITTED
        property:
          name: passwordEncoder
          id: bcryptPasswordEncoder
          class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
      - name: userDatabase
        id: userDatabase
        class: org.cloudfoundry.identity.uaa.user.JdbcUaaUserDatabase
        constructor-arg:
          id: jdbcTemplate
          class: org.springframework.jdbc.core.JdbcTemplate
          property:
            name: dataSource
            dataSource: OMITTED
        property:
        - name: defaultAuthorities
          id: defaultUserAuthorities
          set-class: java.util.HashSet
          value:
          - text: openid
          - text: scim.me
          - text: cloud_controller.read
          - text: cloud_controller.write
          - text: password.write
          - text: scim.userids
          - text: uaa.user
          - text: approvals.me
        - name: userAuthoritiesQuery
          value:
            text: select g.displayName from groups g, group_membership m where g.id
              = m.group_id and m.member_id = ?
      - name: signerProvider
        id: signerProvider
        class: org.cloudfoundry.identity.uaa.oauth.token.SignerProvider
        property:
        - name: signingKey
          value: ${jwt.token.signing-key:tokenkey}
        - name: verifierKey
          value: ${jwt.token.verification-key:tokenkey}
      - name: defaultUserAuthorities
        id: defaultUserAuthorities
        set-class: java.util.HashSet
        value:
        - text: openid
        - text: scim.me
        - text: cloud_controller.read
        - text: cloud_controller.write
        - text: password.write
        - text: scim.userids
        - text: uaa.user
        - text: approvals.me
      - name: issuer
        value: ${issuer.uri:http://localhost:8080/uaa}
      - name: approvalStore
        id: approvalStore
        class: org.cloudfoundry.identity.uaa.oauth.approval.JdbcApprovalStore
        constructor-arg:
        - id: jdbcTemplate
          class: org.springframework.jdbc.core.JdbcTemplate
          property:
            name: dataSource
            dataSource: OMITTED
        - id: jdbcPagingListFactory
          class: org.cloudfoundry.identity.uaa.rest.jdbc.JdbcPagingListFactory
          constructor-arg:
          - id: jdbcTemplate
            class: org.springframework.jdbc.core.JdbcTemplate
            property:
              name: dataSource
              dataSource: OMITTED
          - id: limitSqlAdapter
            class: org.cloudfoundry.identity.uaa.rest.jdbc.OracleLimitSqlAdapter
        - bean:
            class: org.cloudfoundry.identity.uaa.scim.jdbc.ScimSearchQueryConverter
    resource-id: clients
    entry-point:
      id: oauthAuthenticationEntryPoint
      class: org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint
      property:
        name: realmName
        value: UAA/oauth
  access-denied-handler:
    id: oauthAccessDeniedHandler
    class: org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler
  expression-handler:
    id: oauthWebExpressionHandler
- request-matcher:
    id: groupsUpdateRequestMatcher
    class: org.cloudfoundry.identity.uaa.security.web.UaaRequestMatcher
    constructor-arg:
      value: /Groups
    property:
    - name: method
      value: PUT
    - name: accept
      list:
        value:
          text: application/json
  create-session: stateless
  authentication-manager:
    id: emptyAuthenticationManager
  entry-point:
    id: oauthAuthenticationEntryPoint
    class: org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint
    property:
      name: realmName
      value: UAA/oauth
  access-decision-manager:
    id: groupAccessDecisionManager
    class: org.springframework.security.access.vote.AffirmativeBased
    constructor-arg:
      list:
        bean:
        - id: groupVoter
          class: org.cloudfoundry.identity.uaa.scim.security.GroupVoter
          property:
          - name: membershipManager
            id: groupMembershipManager
            class: org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimGroupMembershipManager
            constructor-arg:
              name: jdbcTemplate
              id: jdbcTemplate
              class: org.springframework.jdbc.core.JdbcTemplate
              property:
                name: dataSource
                dataSource: OMITTED
            property:
            - name: scimGroupProvisioning
              id: scimGroupProvisioning
              class: org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimGroupProvisioning
              constructor-arg:
              - id: jdbcTemplate
                class: org.springframework.jdbc.core.JdbcTemplate
                property:
                  name: dataSource
                  dataSource: OMITTED
              - name: pagingListFactory
                id: jdbcPagingListFactory
                class: org.cloudfoundry.identity.uaa.rest.jdbc.JdbcPagingListFactory
                constructor-arg:
                - id: jdbcTemplate
                  class: org.springframework.jdbc.core.JdbcTemplate
                  property:
                    name: dataSource
                    dataSource: OMITTED
                - id: limitSqlAdapter
                  class: org.cloudfoundry.identity.uaa.rest.jdbc.OracleLimitSqlAdapter
            - name: scimUserProvisioning
              id: scimUserProvisioning
              class: org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimUserProvisioning
              constructor-arg:
              - id: jdbcTemplate
                class: org.springframework.jdbc.core.JdbcTemplate
                property:
                  name: dataSource
                  dataSource: OMITTED
              - name: pagingListFactory
                id: jdbcPagingListFactory
                class: org.cloudfoundry.identity.uaa.rest.jdbc.JdbcPagingListFactory
                constructor-arg:
                - id: jdbcTemplate
                  class: org.springframework.jdbc.core.JdbcTemplate
                  property:
                    name: dataSource
                    dataSource: OMITTED
                - id: limitSqlAdapter
                  class: org.cloudfoundry.identity.uaa.rest.jdbc.OracleLimitSqlAdapter
              comment: {}
              property:
              - name: passwordValidator
                bean:
                  class: org.cloudfoundry.identity.uaa.password.ZxcvbnPasswordValidator
                  property:
                    name: scoreCalculator
                    id: zxcvbnScoreCalculator
                    class: org.cloudfoundry.identity.uaa.password.ZxcvbnPasswordScoreCalculator
                    constructor-arg:
                      value: ${password-policy.required-score:0}
              - name: queryConverter
                id: scimUserQueryConverter
                class: org.cloudfoundry.identity.uaa.scim.jdbc.ScimSearchQueryConverter
                property:
                  name: attributeNameMapper
                  bean:
                    class: org.cloudfoundry.identity.uaa.rest.SimpleAttributeNameMapper
                    constructor-arg:
                      name: paramsMap
                      map:
                        key-type: java.lang.String
                        value-type: java.lang.String
                        entry:
                        - key: emails\.value
                          value: email
                        - key: groups\.display
                          value: authorities
                        - key: phoneNumbers\.value
                          value: phoneNumber
              - name: deactivateOnDelete
                value: ${scim.delete.deactivate:false}
            - name: defaultUserGroups
              id: defaultUserAuthorities
              set-class: java.util.HashSet
              value:
              - text: openid
              - text: scim.me
              - text: cloud_controller.read
              - text: cloud_controller.write
              - text: password.write
              - text: scim.userids
              - text: uaa.user
              - text: approvals.me
          - name: groupPrefix
            value: memberScope=
        - class: org.springframework.security.oauth2.provider.vote.ScopeVoter
          property:
          - name: scopePrefix
            value: scope=
          - name: throwException
            value: 'false'
        - class: org.springframework.security.access.vote.AuthenticatedVoter
  intercept-url:
    pattern: /**
    access: scope=scim.write,scope=groups.update,memberScope=writer
    method: PUT
  custom-filter:
    position: PRE_AUTH_FILTER
    id: scimResourceAuthenticationFilter
    token-services:
      id: tokenServices
      class: org.cloudfoundry.identity.uaa.oauth.token.UaaTokenServices
      property:
      - name: clientDetailsService
        id: jdbcClientDetailsService
        class: org.springframework.security.oauth2.provider.JdbcClientDetailsService
        constructor-arg:
          dataSource: OMITTED
        property:
          name: passwordEncoder
          id: bcryptPasswordEncoder
          class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
      - name: userDatabase
        id: userDatabase
        class: org.cloudfoundry.identity.uaa.user.JdbcUaaUserDatabase
        constructor-arg:
          id: jdbcTemplate
          class: org.springframework.jdbc.core.JdbcTemplate
          property:
            name: dataSource
            dataSource: OMITTED
        property:
        - name: defaultAuthorities
          id: defaultUserAuthorities
          set-class: java.util.HashSet
          value:
          - text: openid
          - text: scim.me
          - text: cloud_controller.read
          - text: cloud_controller.write
          - text: password.write
          - text: scim.userids
          - text: uaa.user
          - text: approvals.me
        - name: userAuthoritiesQuery
          value:
            text: select g.displayName from groups g, group_membership m where g.id
              = m.group_id and m.member_id = ?
      - name: signerProvider
        id: signerProvider
        class: org.cloudfoundry.identity.uaa.oauth.token.SignerProvider
        property:
        - name: signingKey
          value: ${jwt.token.signing-key:tokenkey}
        - name: verifierKey
          value: ${jwt.token.verification-key:tokenkey}
      - name: defaultUserAuthorities
        id: defaultUserAuthorities
        set-class: java.util.HashSet
        value:
        - text: openid
        - text: scim.me
        - text: cloud_controller.read
        - text: cloud_controller.write
        - text: password.write
        - text: scim.userids
        - text: uaa.user
        - text: approvals.me
      - name: issuer
        value: ${issuer.uri:http://localhost:8080/uaa}
      - name: approvalStore
        id: approvalStore
        class: org.cloudfoundry.identity.uaa.oauth.approval.JdbcApprovalStore
        constructor-arg:
        - id: jdbcTemplate
          class: org.springframework.jdbc.core.JdbcTemplate
          property:
            name: dataSource
            dataSource: OMITTED
        - id: jdbcPagingListFactory
          class: org.cloudfoundry.identity.uaa.rest.jdbc.JdbcPagingListFactory
          constructor-arg:
          - id: jdbcTemplate
            class: org.springframework.jdbc.core.JdbcTemplate
            property:
              name: dataSource
              dataSource: OMITTED
          - id: limitSqlAdapter
            class: org.cloudfoundry.identity.uaa.rest.jdbc.OracleLimitSqlAdapter
        - bean:
            class: org.cloudfoundry.identity.uaa.scim.jdbc.ScimSearchQueryConverter
    resource-id: scim
    entry-point:
      id: oauthAuthenticationEntryPoint
      class: org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint
      property:
        name: realmName
        value: UAA/oauth
  access-denied-handler:
    id: oauthAccessDeniedHandler
    class: org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler
- request-matcher:
    id: groupsPatchRequestMatcher
    class: org.cloudfoundry.identity.uaa.security.web.UaaRequestMatcher
    constructor-arg:
      value: /Groups
    property:
    - name: method
      value: PATCH
    - name: accept
      list:
        value:
          text: application/json
  create-session: stateless
  authentication-manager:
    id: emptyAuthenticationManager
  entry-point:
    id: oauthAuthenticationEntryPoint
    class: org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint
    property:
      name: realmName
      value: UAA/oauth
  access-decision-manager:
    id: groupAccessDecisionManager
    class: org.springframework.security.access.vote.AffirmativeBased
    constructor-arg:
      list:
        bean:
        - id: groupVoter
          class: org.cloudfoundry.identity.uaa.scim.security.GroupVoter
          property:
          - name: membershipManager
            id: groupMembershipManager
            class: org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimGroupMembershipManager
            constructor-arg:
              name: jdbcTemplate
              id: jdbcTemplate
              class: org.springframework.jdbc.core.JdbcTemplate
              property:
                name: dataSource
                dataSource: OMITTED
            property:
            - name: scimGroupProvisioning
              id: scimGroupProvisioning
              class: org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimGroupProvisioning
              constructor-arg:
              - id: jdbcTemplate
                class: org.springframework.jdbc.core.JdbcTemplate
                property:
                  name: dataSource
                  dataSource: OMITTED
              - name: pagingListFactory
                id: jdbcPagingListFactory
                class: org.cloudfoundry.identity.uaa.rest.jdbc.JdbcPagingListFactory
                constructor-arg:
                - id: jdbcTemplate
                  class: org.springframework.jdbc.core.JdbcTemplate
                  property:
                    name: dataSource
                    dataSource: OMITTED
                - id: limitSqlAdapter
                  class: org.cloudfoundry.identity.uaa.rest.jdbc.OracleLimitSqlAdapter
            - name: scimUserProvisioning
              id: scimUserProvisioning
              class: org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimUserProvisioning
              constructor-arg:
              - id: jdbcTemplate
                class: org.springframework.jdbc.core.JdbcTemplate
                property:
                  name: dataSource
                  dataSource: OMITTED
              - name: pagingListFactory
                id: jdbcPagingListFactory
                class: org.cloudfoundry.identity.uaa.rest.jdbc.JdbcPagingListFactory
                constructor-arg:
                - id: jdbcTemplate
                  class: org.springframework.jdbc.core.JdbcTemplate
                  property:
                    name: dataSource
                    dataSource: OMITTED
                - id: limitSqlAdapter
                  class: org.cloudfoundry.identity.uaa.rest.jdbc.OracleLimitSqlAdapter
              comment: {}
              property:
              - name: passwordValidator
                bean:
                  class: org.cloudfoundry.identity.uaa.password.ZxcvbnPasswordValidator
                  property:
                    name: scoreCalculator
                    id: zxcvbnScoreCalculator
                    class: org.cloudfoundry.identity.uaa.password.ZxcvbnPasswordScoreCalculator
                    constructor-arg:
                      value: ${password-policy.required-score:0}
              - name: queryConverter
                id: scimUserQueryConverter
                class: org.cloudfoundry.identity.uaa.scim.jdbc.ScimSearchQueryConverter
                property:
                  name: attributeNameMapper
                  bean:
                    class: org.cloudfoundry.identity.uaa.rest.SimpleAttributeNameMapper
                    constructor-arg:
                      name: paramsMap
                      map:
                        key-type: java.lang.String
                        value-type: java.lang.String
                        entry:
                        - key: emails\.value
                          value: email
                        - key: groups\.display
                          value: authorities
                        - key: phoneNumbers\.value
                          value: phoneNumber
              - name: deactivateOnDelete
                value: ${scim.delete.deactivate:false}
            - name: defaultUserGroups
              id: defaultUserAuthorities
              set-class: java.util.HashSet
              value:
              - text: openid
              - text: scim.me
              - text: cloud_controller.read
              - text: cloud_controller.write
              - text: password.write
              - text: scim.userids
              - text: uaa.user
              - text: approvals.me
          - name: groupPrefix
            value: memberScope=
        - class: org.springframework.security.oauth2.provider.vote.ScopeVoter
          property:
          - name: scopePrefix
            value: scope=
          - name: throwException
            value: 'false'
        - class: org.springframework.security.access.vote.AuthenticatedVoter
  intercept-url:
    pattern: /**
    access: scope=scim.write,scope=groups.update,memberScope=writer
    method: PATCH
  custom-filter:
    position: PRE_AUTH_FILTER
    id: scimResourceAuthenticationFilter
    token-services:
      id: tokenServices
      class: org.cloudfoundry.identity.uaa.oauth.token.UaaTokenServices
      property:
      - name: clientDetailsService
        id: jdbcClientDetailsService
        class: org.springframework.security.oauth2.provider.JdbcClientDetailsService
        constructor-arg:
          dataSource: OMITTED
        property:
          name: passwordEncoder
          id: bcryptPasswordEncoder
          class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
      - name: userDatabase
        id: userDatabase
        class: org.cloudfoundry.identity.uaa.user.JdbcUaaUserDatabase
        constructor-arg:
          id: jdbcTemplate
          class: org.springframework.jdbc.core.JdbcTemplate
          property:
            name: dataSource
            dataSource: OMITTED
        property:
        - name: defaultAuthorities
          id: defaultUserAuthorities
          set-class: java.util.HashSet
          value:
          - text: openid
          - text: scim.me
          - text: cloud_controller.read
          - text: cloud_controller.write
          - text: password.write
          - text: scim.userids
          - text: uaa.user
          - text: approvals.me
        - name: userAuthoritiesQuery
          value:
            text: select g.displayName from groups g, group_membership m where g.id
              = m.group_id and m.member_id = ?
      - name: signerProvider
        id: signerProvider
        class: org.cloudfoundry.identity.uaa.oauth.token.SignerProvider
        property:
        - name: signingKey
          value: ${jwt.token.signing-key:tokenkey}
        - name: verifierKey
          value: ${jwt.token.verification-key:tokenkey}
      - name: defaultUserAuthorities
        id: defaultUserAuthorities
        set-class: java.util.HashSet
        value:
        - text: openid
        - text: scim.me
        - text: cloud_controller.read
        - text: cloud_controller.write
        - text: password.write
        - text: scim.userids
        - text: uaa.user
        - text: approvals.me
      - name: issuer
        value: ${issuer.uri:http://localhost:8080/uaa}
      - name: approvalStore
        id: approvalStore
        class: org.cloudfoundry.identity.uaa.oauth.approval.JdbcApprovalStore
        constructor-arg:
        - id: jdbcTemplate
          class: org.springframework.jdbc.core.JdbcTemplate
          property:
            name: dataSource
            dataSource: OMITTED
        - id: jdbcPagingListFactory
          class: org.cloudfoundry.identity.uaa.rest.jdbc.JdbcPagingListFactory
          constructor-arg:
          - id: jdbcTemplate
            class: org.springframework.jdbc.core.JdbcTemplate
            property:
              name: dataSource
              dataSource: OMITTED
          - id: limitSqlAdapter
            class: org.cloudfoundry.identity.uaa.rest.jdbc.OracleLimitSqlAdapter
        - bean:
            class: org.cloudfoundry.identity.uaa.scim.jdbc.ScimSearchQueryConverter
    resource-id: scim
    entry-point:
      id: oauthAuthenticationEntryPoint
      class: org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint
      property:
        name: realmName
        value: UAA/oauth
  access-denied-handler:
    id: oauthAccessDeniedHandler
    class: org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler
- request-matcher:
    id: groupsReadRequestMatcher
    class: org.cloudfoundry.identity.uaa.security.web.UaaRequestMatcher
    constructor-arg:
      value: /Groups
    property:
      name: method
      value: GET
  create-session: stateless
  authentication-manager:
    id: emptyAuthenticationManager
  entry-point:
    id: oauthAuthenticationEntryPoint
    class: org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint
    property:
      name: realmName
      value: UAA/oauth
  access-decision-manager:
    id: groupAccessDecisionManager
    class: org.springframework.security.access.vote.AffirmativeBased
    constructor-arg:
      list:
        bean:
        - id: groupVoter
          class: org.cloudfoundry.identity.uaa.scim.security.GroupVoter
          property:
          - name: membershipManager
            id: groupMembershipManager
            class: org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimGroupMembershipManager
            constructor-arg:
              name: jdbcTemplate
              id: jdbcTemplate
              class: org.springframework.jdbc.core.JdbcTemplate
              property:
                name: dataSource
                dataSource: OMITTED
            property:
            - name: scimGroupProvisioning
              id: scimGroupProvisioning
              class: org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimGroupProvisioning
              constructor-arg:
              - id: jdbcTemplate
                class: org.springframework.jdbc.core.JdbcTemplate
                property:
                  name: dataSource
                  dataSource: OMITTED
              - name: pagingListFactory
                id: jdbcPagingListFactory
                class: org.cloudfoundry.identity.uaa.rest.jdbc.JdbcPagingListFactory
                constructor-arg:
                - id: jdbcTemplate
                  class: org.springframework.jdbc.core.JdbcTemplate
                  property:
                    name: dataSource
                    dataSource: OMITTED
                - id: limitSqlAdapter
                  class: org.cloudfoundry.identity.uaa.rest.jdbc.OracleLimitSqlAdapter
            - name: scimUserProvisioning
              id: scimUserProvisioning
              class: org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimUserProvisioning
              constructor-arg:
              - id: jdbcTemplate
                class: org.springframework.jdbc.core.JdbcTemplate
                property:
                  name: dataSource
                  dataSource: OMITTED
              - name: pagingListFactory
                id: jdbcPagingListFactory
                class: org.cloudfoundry.identity.uaa.rest.jdbc.JdbcPagingListFactory
                constructor-arg:
                - id: jdbcTemplate
                  class: org.springframework.jdbc.core.JdbcTemplate
                  property:
                    name: dataSource
                    dataSource: OMITTED
                - id: limitSqlAdapter
                  class: org.cloudfoundry.identity.uaa.rest.jdbc.OracleLimitSqlAdapter
              comment: {}
              property:
              - name: passwordValidator
                bean:
                  class: org.cloudfoundry.identity.uaa.password.ZxcvbnPasswordValidator
                  property:
                    name: scoreCalculator
                    id: zxcvbnScoreCalculator
                    class: org.cloudfoundry.identity.uaa.password.ZxcvbnPasswordScoreCalculator
                    constructor-arg:
                      value: ${password-policy.required-score:0}
              - name: queryConverter
                id: scimUserQueryConverter
                class: org.cloudfoundry.identity.uaa.scim.jdbc.ScimSearchQueryConverter
                property:
                  name: attributeNameMapper
                  bean:
                    class: org.cloudfoundry.identity.uaa.rest.SimpleAttributeNameMapper
                    constructor-arg:
                      name: paramsMap
                      map:
                        key-type: java.lang.String
                        value-type: java.lang.String
                        entry:
                        - key: emails\.value
                          value: email
                        - key: groups\.display
                          value: authorities
                        - key: phoneNumbers\.value
                          value: phoneNumber
              - name: deactivateOnDelete
                value: ${scim.delete.deactivate:false}
            - name: defaultUserGroups
              id: defaultUserAuthorities
              set-class: java.util.HashSet
              value:
              - text: openid
              - text: scim.me
              - text: cloud_controller.read
              - text: cloud_controller.write
              - text: password.write
              - text: scim.userids
              - text: uaa.user
              - text: approvals.me
          - name: groupPrefix
            value: memberScope=
        - class: org.springframework.security.oauth2.provider.vote.ScopeVoter
          property:
          - name: scopePrefix
            value: scope=
          - name: throwException
            value: 'false'
        - class: org.springframework.security.access.vote.AuthenticatedVoter
  intercept-url:
    pattern: /**
    access: scope=scim.read,memberScope=reader
    method: GET
  custom-filter:
    position: PRE_AUTH_FILTER
    id: scimResourceAuthenticationFilter
    token-services:
      id: tokenServices
      class: org.cloudfoundry.identity.uaa.oauth.token.UaaTokenServices
      property:
      - name: clientDetailsService
        id: jdbcClientDetailsService
        class: org.springframework.security.oauth2.provider.JdbcClientDetailsService
        constructor-arg:
          dataSource: OMITTED
        property:
          name: passwordEncoder
          id: bcryptPasswordEncoder
          class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
      - name: userDatabase
        id: userDatabase
        class: org.cloudfoundry.identity.uaa.user.JdbcUaaUserDatabase
        constructor-arg:
          id: jdbcTemplate
          class: org.springframework.jdbc.core.JdbcTemplate
          property:
            name: dataSource
            dataSource: OMITTED
        property:
        - name: defaultAuthorities
          id: defaultUserAuthorities
          set-class: java.util.HashSet
          value:
          - text: openid
          - text: scim.me
          - text: cloud_controller.read
          - text: cloud_controller.write
          - text: password.write
          - text: scim.userids
          - text: uaa.user
          - text: approvals.me
        - name: userAuthoritiesQuery
          value:
            text: select g.displayName from groups g, group_membership m where g.id
              = m.group_id and m.member_id = ?
      - name: signerProvider
        id: signerProvider
        class: org.cloudfoundry.identity.uaa.oauth.token.SignerProvider
        property:
        - name: signingKey
          value: ${jwt.token.signing-key:tokenkey}
        - name: verifierKey
          value: ${jwt.token.verification-key:tokenkey}
      - name: defaultUserAuthorities
        id: defaultUserAuthorities
        set-class: java.util.HashSet
        value:
        - text: openid
        - text: scim.me
        - text: cloud_controller.read
        - text: cloud_controller.write
        - text: password.write
        - text: scim.userids
        - text: uaa.user
        - text: approvals.me
      - name: issuer
        value: ${issuer.uri:http://localhost:8080/uaa}
      - name: approvalStore
        id: approvalStore
        class: org.cloudfoundry.identity.uaa.oauth.approval.JdbcApprovalStore
        constructor-arg:
        - id: jdbcTemplate
          class: org.springframework.jdbc.core.JdbcTemplate
          property:
            name: dataSource
            dataSource: OMITTED
        - id: jdbcPagingListFactory
          class: org.cloudfoundry.identity.uaa.rest.jdbc.JdbcPagingListFactory
          constructor-arg:
          - id: jdbcTemplate
            class: org.springframework.jdbc.core.JdbcTemplate
            property:
              name: dataSource
              dataSource: OMITTED
          - id: limitSqlAdapter
            class: org.cloudfoundry.identity.uaa.rest.jdbc.OracleLimitSqlAdapter
        - bean:
            class: org.cloudfoundry.identity.uaa.scim.jdbc.ScimSearchQueryConverter
    resource-id: scim
    entry-point:
      id: oauthAuthenticationEntryPoint
      class: org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint
      property:
        name: realmName
        value: UAA/oauth
  access-denied-handler:
    id: oauthAccessDeniedHandler
    class: org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler
- pattern: /Groups/**
  create-session: stateless
  authentication-manager:
    id: emptyAuthenticationManager
  entry-point:
    id: oauthAuthenticationEntryPoint
    class: org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint
    property:
      name: realmName
      value: UAA/oauth
  access-decision-manager:
    id: accessDecisionManager
    class: org.springframework.security.access.vote.UnanimousBased
    constructor-arg:
      list:
        bean:
        - class: org.springframework.security.oauth2.provider.vote.ScopeVoter
          property:
            name: scopePrefix
            value: scope=
        - class: org.springframework.security.access.vote.RoleVoter
        - class: org.springframework.security.access.vote.AuthenticatedVoter
  intercept-url:
  - pattern: /Groups/**
    access: scope=scim.write
    method: DELETE
  - pattern: /Groups
    access: scope=scim.write
    method: POST
  - pattern: /**
    access: ROLE_NONEXISTENT
  custom-filter:
    position: PRE_AUTH_FILTER
    id: scimResourceAuthenticationFilter
    token-services:
      id: tokenServices
      class: org.cloudfoundry.identity.uaa.oauth.token.UaaTokenServices
      property:
      - name: clientDetailsService
        id: jdbcClientDetailsService
        class: org.springframework.security.oauth2.provider.JdbcClientDetailsService
        constructor-arg:
          dataSource: OMITTED
        property:
          name: passwordEncoder
          id: bcryptPasswordEncoder
          class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
      - name: userDatabase
        id: userDatabase
        class: org.cloudfoundry.identity.uaa.user.JdbcUaaUserDatabase
        constructor-arg:
          id: jdbcTemplate
          class: org.springframework.jdbc.core.JdbcTemplate
          property:
            name: dataSource
            dataSource: OMITTED
        property:
        - name: defaultAuthorities
          id: defaultUserAuthorities
          set-class: java.util.HashSet
          value:
          - text: openid
          - text: scim.me
          - text: cloud_controller.read
          - text: cloud_controller.write
          - text: password.write
          - text: scim.userids
          - text: uaa.user
          - text: approvals.me
        - name: userAuthoritiesQuery
          value:
            text: select g.displayName from groups g, group_membership m where g.id
              = m.group_id and m.member_id = ?
      - name: signerProvider
        id: signerProvider
        class: org.cloudfoundry.identity.uaa.oauth.token.SignerProvider
        property:
        - name: signingKey
          value: ${jwt.token.signing-key:tokenkey}
        - name: verifierKey
          value: ${jwt.token.verification-key:tokenkey}
      - name: defaultUserAuthorities
        id: defaultUserAuthorities
        set-class: java.util.HashSet
        value:
        - text: openid
        - text: scim.me
        - text: cloud_controller.read
        - text: cloud_controller.write
        - text: password.write
        - text: scim.userids
        - text: uaa.user
        - text: approvals.me
      - name: issuer
        value: ${issuer.uri:http://localhost:8080/uaa}
      - name: approvalStore
        id: approvalStore
        class: org.cloudfoundry.identity.uaa.oauth.approval.JdbcApprovalStore
        constructor-arg:
        - id: jdbcTemplate
          class: org.springframework.jdbc.core.JdbcTemplate
          property:
            name: dataSource
            dataSource: OMITTED
        - id: jdbcPagingListFactory
          class: org.cloudfoundry.identity.uaa.rest.jdbc.JdbcPagingListFactory
          constructor-arg:
          - id: jdbcTemplate
            class: org.springframework.jdbc.core.JdbcTemplate
            property:
              name: dataSource
              dataSource: OMITTED
          - id: limitSqlAdapter
            class: org.cloudfoundry.identity.uaa.rest.jdbc.OracleLimitSqlAdapter
        - bean:
            class: org.cloudfoundry.identity.uaa.scim.jdbc.ScimSearchQueryConverter
    resource-id: scim
    entry-point:
      id: oauthAuthenticationEntryPoint
      class: org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint
      property:
        name: realmName
        value: UAA/oauth
  access-denied-handler:
    id: oauthAccessDeniedHandler
    class: org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler
- pattern: /User*/*/password
  create-session: stateless
  authentication-manager:
    id: emptyAuthenticationManager
  entry-point:
    id: oauthAuthenticationEntryPoint
    class: org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint
    property:
      name: realmName
      value: UAA/oauth
  access-decision-manager:
    id: accessDecisionManager
    class: org.springframework.security.access.vote.UnanimousBased
    constructor-arg:
      list:
        bean:
        - class: org.springframework.security.oauth2.provider.vote.ScopeVoter
          property:
            name: scopePrefix
            value: scope=
        - class: org.springframework.security.access.vote.RoleVoter
        - class: org.springframework.security.access.vote.AuthenticatedVoter
  intercept-url:
    pattern: /User*/*/password
    access: IS_AUTHENTICATED_FULLY,scope=password.write
  custom-filter:
    position: PRE_AUTH_FILTER
    id: passwordResourceAuthenticationFilter
    token-services:
      id: tokenServices
      class: org.cloudfoundry.identity.uaa.oauth.token.UaaTokenServices
      property:
      - name: clientDetailsService
        id: jdbcClientDetailsService
        class: org.springframework.security.oauth2.provider.JdbcClientDetailsService
        constructor-arg:
          dataSource: OMITTED
        property:
          name: passwordEncoder
          id: bcryptPasswordEncoder
          class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
      - name: userDatabase
        id: userDatabase
        class: org.cloudfoundry.identity.uaa.user.JdbcUaaUserDatabase
        constructor-arg:
          id: jdbcTemplate
          class: org.springframework.jdbc.core.JdbcTemplate
          property:
            name: dataSource
            dataSource: OMITTED
        property:
        - name: defaultAuthorities
          id: defaultUserAuthorities
          set-class: java.util.HashSet
          value:
          - text: openid
          - text: scim.me
          - text: cloud_controller.read
          - text: cloud_controller.write
          - text: password.write
          - text: scim.userids
          - text: uaa.user
          - text: approvals.me
        - name: userAuthoritiesQuery
          value:
            text: select g.displayName from groups g, group_membership m where g.id
              = m.group_id and m.member_id = ?
      - name: signerProvider
        id: signerProvider
        class: org.cloudfoundry.identity.uaa.oauth.token.SignerProvider
        property:
        - name: signingKey
          value: ${jwt.token.signing-key:tokenkey}
        - name: verifierKey
          value: ${jwt.token.verification-key:tokenkey}
      - name: defaultUserAuthorities
        id: defaultUserAuthorities
        set-class: java.util.HashSet
        value:
        - text: openid
        - text: scim.me
        - text: cloud_controller.read
        - text: cloud_controller.write
        - text: password.write
        - text: scim.userids
        - text: uaa.user
        - text: approvals.me
      - name: issuer
        value: ${issuer.uri:http://localhost:8080/uaa}
      - name: approvalStore
        id: approvalStore
        class: org.cloudfoundry.identity.uaa.oauth.approval.JdbcApprovalStore
        constructor-arg:
        - id: jdbcTemplate
          class: org.springframework.jdbc.core.JdbcTemplate
          property:
            name: dataSource
            dataSource: OMITTED
        - id: jdbcPagingListFactory
          class: org.cloudfoundry.identity.uaa.rest.jdbc.JdbcPagingListFactory
          constructor-arg:
          - id: jdbcTemplate
            class: org.springframework.jdbc.core.JdbcTemplate
            property:
              name: dataSource
              dataSource: OMITTED
          - id: limitSqlAdapter
            class: org.cloudfoundry.identity.uaa.rest.jdbc.OracleLimitSqlAdapter
        - bean:
            class: org.cloudfoundry.identity.uaa.scim.jdbc.ScimSearchQueryConverter
    resource-id: password
    entry-point:
      id: oauthAuthenticationEntryPoint
      class: org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint
      property:
        name: realmName
        value: UAA/oauth
  access-denied-handler:
    id: oauthAccessDeniedHandler
    class: org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler
- pattern: /Users/**
  create-session: stateless
  authentication-manager:
    id: emptyAuthenticationManager
  entry-point:
    id: oauthAuthenticationEntryPoint
    class: org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint
    property:
      name: realmName
      value: UAA/oauth
  access-decision-manager:
    id: userAccessDecisionManager
    class: org.springframework.security.access.vote.AffirmativeBased
    constructor-arg:
      list:
        bean:
        - id: userVoter
          class: org.cloudfoundry.identity.uaa.scim.security.UserVoter
        - class: org.springframework.security.oauth2.provider.vote.ScopeVoter
          property:
          - name: scopePrefix
            value: scope=
          - name: throwException
            value: 'false'
        - class: org.springframework.security.access.vote.AuthenticatedVoter
        - class: org.springframework.security.access.vote.RoleVoter
  intercept-url:
  - pattern: /Users/**
    access: scope=scim.read,user=self
    method: GET
  - pattern: /Users/*
    access: scope=scim.write
    method: DELETE
  - pattern: /Users/*
    access: scope=scim.write,user=self
    method: PUT
  - pattern: /Users
    access: scope=scim.write
    method: POST
  - pattern: /**
    access: ROLE_NONEXISTENT
  custom-filter:
    position: PRE_AUTH_FILTER
    id: scimResourceAuthenticationFilter
    token-services:
      id: tokenServices
      class: org.cloudfoundry.identity.uaa.oauth.token.UaaTokenServices
      property:
      - name: clientDetailsService
        id: jdbcClientDetailsService
        class: org.springframework.security.oauth2.provider.JdbcClientDetailsService
        constructor-arg:
          dataSource: OMITTED
        property:
          name: passwordEncoder
          id: bcryptPasswordEncoder
          class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
      - name: userDatabase
        id: userDatabase
        class: org.cloudfoundry.identity.uaa.user.JdbcUaaUserDatabase
        constructor-arg:
          id: jdbcTemplate
          class: org.springframework.jdbc.core.JdbcTemplate
          property:
            name: dataSource
            dataSource: OMITTED
        property:
        - name: defaultAuthorities
          id: defaultUserAuthorities
          set-class: java.util.HashSet
          value:
          - text: openid
          - text: scim.me
          - text: cloud_controller.read
          - text: cloud_controller.write
          - text: password.write
          - text: scim.userids
          - text: uaa.user
          - text: approvals.me
        - name: userAuthoritiesQuery
          value:
            text: select g.displayName from groups g, group_membership m where g.id
              = m.group_id and m.member_id = ?
      - name: signerProvider
        id: signerProvider
        class: org.cloudfoundry.identity.uaa.oauth.token.SignerProvider
        property:
        - name: signingKey
          value: ${jwt.token.signing-key:tokenkey}
        - name: verifierKey
          value: ${jwt.token.verification-key:tokenkey}
      - name: defaultUserAuthorities
        id: defaultUserAuthorities
        set-class: java.util.HashSet
        value:
        - text: openid
        - text: scim.me
        - text: cloud_controller.read
        - text: cloud_controller.write
        - text: password.write
        - text: scim.userids
        - text: uaa.user
        - text: approvals.me
      - name: issuer
        value: ${issuer.uri:http://localhost:8080/uaa}
      - name: approvalStore
        id: approvalStore
        class: org.cloudfoundry.identity.uaa.oauth.approval.JdbcApprovalStore
        constructor-arg:
        - id: jdbcTemplate
          class: org.springframework.jdbc.core.JdbcTemplate
          property:
            name: dataSource
            dataSource: OMITTED
        - id: jdbcPagingListFactory
          class: org.cloudfoundry.identity.uaa.rest.jdbc.JdbcPagingListFactory
          constructor-arg:
          - id: jdbcTemplate
            class: org.springframework.jdbc.core.JdbcTemplate
            property:
              name: dataSource
              dataSource: OMITTED
          - id: limitSqlAdapter
            class: org.cloudfoundry.identity.uaa.rest.jdbc.OracleLimitSqlAdapter
        - bean:
            class: org.cloudfoundry.identity.uaa.scim.jdbc.ScimSearchQueryConverter
    resource-id: scim
    entry-point:
      id: oauthAuthenticationEntryPoint
      class: org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint
      property:
        name: realmName
        value: UAA/oauth
  access-denied-handler:
    id: oauthAccessDeniedHandler
    class: org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler
- pattern: /ids/Users*
  create-session: stateless
  authentication-manager:
    id: emptyAuthenticationManager
  entry-point:
    id: oauthAuthenticationEntryPoint
    class: org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint
    property:
      name: realmName
      value: UAA/oauth
  access-decision-manager:
    id: accessDecisionManager
    class: org.springframework.security.access.vote.UnanimousBased
    constructor-arg:
      list:
        bean:
        - class: org.springframework.security.oauth2.provider.vote.ScopeVoter
          property:
            name: scopePrefix
            value: scope=
        - class: org.springframework.security.access.vote.RoleVoter
        - class: org.springframework.security.access.vote.AuthenticatedVoter
  intercept-url:
    pattern: /**
    access: IS_AUTHENTICATED_FULLY
  custom-filter:
    position: PRE_AUTH_FILTER
    id: idsResourceAuthenticationFilter
    token-services:
      id: tokenServices
      class: org.cloudfoundry.identity.uaa.oauth.token.UaaTokenServices
      property:
      - name: clientDetailsService
        id: jdbcClientDetailsService
        class: org.springframework.security.oauth2.provider.JdbcClientDetailsService
        constructor-arg:
          dataSource: OMITTED
        property:
          name: passwordEncoder
          id: bcryptPasswordEncoder
          class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
      - name: userDatabase
        id: userDatabase
        class: org.cloudfoundry.identity.uaa.user.JdbcUaaUserDatabase
        constructor-arg:
          id: jdbcTemplate
          class: org.springframework.jdbc.core.JdbcTemplate
          property:
            name: dataSource
            dataSource: OMITTED
        property:
        - name: defaultAuthorities
          id: defaultUserAuthorities
          set-class: java.util.HashSet
          value:
          - text: openid
          - text: scim.me
          - text: cloud_controller.read
          - text: cloud_controller.write
          - text: password.write
          - text: scim.userids
          - text: uaa.user
          - text: approvals.me
        - name: userAuthoritiesQuery
          value:
            text: select g.displayName from groups g, group_membership m where g.id
              = m.group_id and m.member_id = ?
      - name: signerProvider
        id: signerProvider
        class: org.cloudfoundry.identity.uaa.oauth.token.SignerProvider
        property:
        - name: signingKey
          value: ${jwt.token.signing-key:tokenkey}
        - name: verifierKey
          value: ${jwt.token.verification-key:tokenkey}
      - name: defaultUserAuthorities
        id: defaultUserAuthorities
        set-class: java.util.HashSet
        value:
        - text: openid
        - text: scim.me
        - text: cloud_controller.read
        - text: cloud_controller.write
        - text: password.write
        - text: scim.userids
        - text: uaa.user
        - text: approvals.me
      - name: issuer
        value: ${issuer.uri:http://localhost:8080/uaa}
      - name: approvalStore
        id: approvalStore
        class: org.cloudfoundry.identity.uaa.oauth.approval.JdbcApprovalStore
        constructor-arg:
        - id: jdbcTemplate
          class: org.springframework.jdbc.core.JdbcTemplate
          property:
            name: dataSource
            dataSource: OMITTED
        - id: jdbcPagingListFactory
          class: org.cloudfoundry.identity.uaa.rest.jdbc.JdbcPagingListFactory
          constructor-arg:
          - id: jdbcTemplate
            class: org.springframework.jdbc.core.JdbcTemplate
            property:
              name: dataSource
              dataSource: OMITTED
          - id: limitSqlAdapter
            class: org.cloudfoundry.identity.uaa.rest.jdbc.OracleLimitSqlAdapter
        - bean:
            class: org.cloudfoundry.identity.uaa.scim.jdbc.ScimSearchQueryConverter
    entry-point:
      id: oauthAuthenticationEntryPoint
      class: org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint
      property:
        name: realmName
        value: UAA/oauth
  access-denied-handler:
    id: oauthAccessDeniedHandler
    class: org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler
- name: approvalsSecurity
  pattern: /approvals
  create-session: stateless
  authentication-manager:
    id: emptyAuthenticationManager
  entry-point:
    id: oauthAuthenticationEntryPoint
    class: org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint
    property:
      name: realmName
      value: UAA/oauth
  access-decision-manager:
    id: accessDecisionManager
    class: org.springframework.security.access.vote.UnanimousBased
    constructor-arg:
      list:
        bean:
        - class: org.springframework.security.oauth2.provider.vote.ScopeVoter
          property:
            name: scopePrefix
            value: scope=
        - class: org.springframework.security.access.vote.RoleVoter
        - class: org.springframework.security.access.vote.AuthenticatedVoter
  intercept-url:
    pattern: /**
    access: IS_AUTHENTICATED_FULLY
  custom-filter:
    position: PRE_AUTH_FILTER
    id: approvalsResourceAuthenticationFilter
    token-services:
      id: tokenServices
      class: org.cloudfoundry.identity.uaa.oauth.token.UaaTokenServices
      property:
      - name: clientDetailsService
        id: jdbcClientDetailsService
        class: org.springframework.security.oauth2.provider.JdbcClientDetailsService
        constructor-arg:
          dataSource: OMITTED
        property:
          name: passwordEncoder
          id: bcryptPasswordEncoder
          class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
      - name: userDatabase
        id: userDatabase
        class: org.cloudfoundry.identity.uaa.user.JdbcUaaUserDatabase
        constructor-arg:
          id: jdbcTemplate
          class: org.springframework.jdbc.core.JdbcTemplate
          property:
            name: dataSource
            dataSource: OMITTED
        property:
        - name: defaultAuthorities
          id: defaultUserAuthorities
          set-class: java.util.HashSet
          value:
          - text: openid
          - text: scim.me
          - text: cloud_controller.read
          - text: cloud_controller.write
          - text: password.write
          - text: scim.userids
          - text: uaa.user
          - text: approvals.me
        - name: userAuthoritiesQuery
          value:
            text: select g.displayName from groups g, group_membership m where g.id
              = m.group_id and m.member_id = ?
      - name: signerProvider
        id: signerProvider
        class: org.cloudfoundry.identity.uaa.oauth.token.SignerProvider
        property:
        - name: signingKey
          value: ${jwt.token.signing-key:tokenkey}
        - name: verifierKey
          value: ${jwt.token.verification-key:tokenkey}
      - name: defaultUserAuthorities
        id: defaultUserAuthorities
        set-class: java.util.HashSet
        value:
        - text: openid
        - text: scim.me
        - text: cloud_controller.read
        - text: cloud_controller.write
        - text: password.write
        - text: scim.userids
        - text: uaa.user
        - text: approvals.me
      - name: issuer
        value: ${issuer.uri:http://localhost:8080/uaa}
      - name: approvalStore
        id: approvalStore
        class: org.cloudfoundry.identity.uaa.oauth.approval.JdbcApprovalStore
        constructor-arg:
        - id: jdbcTemplate
          class: org.springframework.jdbc.core.JdbcTemplate
          property:
            name: dataSource
            dataSource: OMITTED
        - id: jdbcPagingListFactory
          class: org.cloudfoundry.identity.uaa.rest.jdbc.JdbcPagingListFactory
          constructor-arg:
          - id: jdbcTemplate
            class: org.springframework.jdbc.core.JdbcTemplate
            property:
              name: dataSource
              dataSource: OMITTED
          - id: limitSqlAdapter
            class: org.cloudfoundry.identity.uaa.rest.jdbc.OracleLimitSqlAdapter
        - bean:
            class: org.cloudfoundry.identity.uaa.scim.jdbc.ScimSearchQueryConverter
    resource-id: uaa
    entry-point:
      id: oauthAuthenticationEntryPoint
      class: org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint
      property:
        name: realmName
        value: UAA/oauth
  access-denied-handler:
    id: oauthAccessDeniedHandler
    class: org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler
- name: checkTokenSecurity
  pattern: /check_token
  create-session: stateless
  entry-point:
    id: basicAuthenticationEntryPoint
    class: org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint
    property:
    - name: realmName
      value: UAA/client
    - name: typeName
      value: Basic
  authentication-manager:
    id: clientAuthenticationManager
    authentication-provider:
      user-service:
        id: clientDetailsUserService
        class: org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService
        constructor-arg:
          id: jdbcClientDetailsService
          class: org.springframework.security.oauth2.provider.JdbcClientDetailsService
          constructor-arg:
            dataSource: OMITTED
          property:
            name: passwordEncoder
            id: bcryptPasswordEncoder
            class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
        property:
          name: passwordEncoder
          id: bcryptPasswordEncoder
          class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
      password-encoder:
        id: bcryptPasswordEncoder
        class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
  use-expressions: 'true'
  intercept-url:
    pattern: /**
    access: hasRole('uaa.resource')
  anonymous:
    enabled: 'false'
  custom-filter:
    position: BASIC_AUTH_FILTER
    id: clientAuthenticationFilter
    class: org.springframework.security.web.authentication.www.BasicAuthenticationFilter
    constructor-arg:
    - id: clientAuthenticationManager
      authentication-provider:
        user-service:
          id: clientDetailsUserService
          class: org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService
          constructor-arg:
            id: jdbcClientDetailsService
            class: org.springframework.security.oauth2.provider.JdbcClientDetailsService
            constructor-arg:
              dataSource: OMITTED
            property:
              name: passwordEncoder
              id: bcryptPasswordEncoder
              class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
          property:
            name: passwordEncoder
            id: bcryptPasswordEncoder
            class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
        password-encoder:
          id: bcryptPasswordEncoder
          class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
    - id: basicAuthenticationEntryPoint
      class: org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint
      property:
      - name: realmName
        value: UAA/client
      - name: typeName
        value: Basic
    property:
      name: authenticationDetailsSource
      id: authenticationDetailsSource
      class: org.cloudfoundry.identity.uaa.authentication.UaaAuthenticationDetailsSource
  access-denied-handler:
    id: oauthAccessDeniedHandler
    class: org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler
- name: tokenKeySecurity
  pattern: /token_key
  create-session: stateless
  entry-point:
    id: basicAuthenticationEntryPoint
    class: org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint
    property:
    - name: realmName
      value: UAA/client
    - name: typeName
      value: Basic
  authentication-manager:
    id: clientAuthenticationManager
    authentication-provider:
      user-service:
        id: clientDetailsUserService
        class: org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService
        constructor-arg:
          id: jdbcClientDetailsService
          class: org.springframework.security.oauth2.provider.JdbcClientDetailsService
          constructor-arg:
            dataSource: OMITTED
          property:
            name: passwordEncoder
            id: bcryptPasswordEncoder
            class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
        property:
          name: passwordEncoder
          id: bcryptPasswordEncoder
          class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
      password-encoder:
        id: bcryptPasswordEncoder
        class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
  use-expressions: 'true'
  intercept-url:
    pattern: /**
    access: isAnonymous() or hasRole('uaa.resource')
  anonymous:
    enabled: 'true'
  custom-filter:
    position: BASIC_AUTH_FILTER
    id: clientAuthenticationFilter
    class: org.springframework.security.web.authentication.www.BasicAuthenticationFilter
    constructor-arg:
    - id: clientAuthenticationManager
      authentication-provider:
        user-service:
          id: clientDetailsUserService
          class: org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService
          constructor-arg:
            id: jdbcClientDetailsService
            class: org.springframework.security.oauth2.provider.JdbcClientDetailsService
            constructor-arg:
              dataSource: OMITTED
            property:
              name: passwordEncoder
              id: bcryptPasswordEncoder
              class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
          property:
            name: passwordEncoder
            id: bcryptPasswordEncoder
            class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
        password-encoder:
          id: bcryptPasswordEncoder
          class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
    - id: basicAuthenticationEntryPoint
      class: org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint
      property:
      - name: realmName
        value: UAA/client
      - name: typeName
        value: Basic
    property:
      name: authenticationDetailsSource
      id: authenticationDetailsSource
      class: org.cloudfoundry.identity.uaa.authentication.UaaAuthenticationDetailsSource
  access-denied-handler:
    id: oauthAccessDeniedHandler
    class: org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler
- name: clientInfoSecurity
  pattern: /clientinfo
  create-session: stateless
  entry-point:
    id: basicAuthenticationEntryPoint
    class: org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint
    property:
    - name: realmName
      value: UAA/client
    - name: typeName
      value: Basic
  authentication-manager:
    id: clientAuthenticationManager
    authentication-provider:
      user-service:
        id: clientDetailsUserService
        class: org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService
        constructor-arg:
          id: jdbcClientDetailsService
          class: org.springframework.security.oauth2.provider.JdbcClientDetailsService
          constructor-arg:
            dataSource: OMITTED
          property:
            name: passwordEncoder
            id: bcryptPasswordEncoder
            class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
        property:
          name: passwordEncoder
          id: bcryptPasswordEncoder
          class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
      password-encoder:
        id: bcryptPasswordEncoder
        class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
  use-expressions: 'true'
  intercept-url:
    pattern: /**
    access: isFullyAuthenticated()
  anonymous:
    enabled: 'false'
  custom-filter:
    position: BASIC_AUTH_FILTER
    id: clientAuthenticationFilter
    class: org.springframework.security.web.authentication.www.BasicAuthenticationFilter
    constructor-arg:
    - id: clientAuthenticationManager
      authentication-provider:
        user-service:
          id: clientDetailsUserService
          class: org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService
          constructor-arg:
            id: jdbcClientDetailsService
            class: org.springframework.security.oauth2.provider.JdbcClientDetailsService
            constructor-arg:
              dataSource: OMITTED
            property:
              name: passwordEncoder
              id: bcryptPasswordEncoder
              class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
          property:
            name: passwordEncoder
            id: bcryptPasswordEncoder
            class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
        password-encoder:
          id: bcryptPasswordEncoder
          class: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
    - id: basicAuthenticationEntryPoint
      class: org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint
      property:
      - name: realmName
        value: UAA/client
      - name: typeName
        value: Basic
    property:
      name: authenticationDetailsSource
      id: authenticationDetailsSource
      class: org.cloudfoundry.identity.uaa.authentication.UaaAuthenticationDetailsSource
  access-denied-handler:
    id: oauthAccessDeniedHandler
    class: org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler
- pattern: /resources/**
  security: none
- pattern: /favicon.ico
  security: none
- pattern: /info
  security: none
- pattern: /password/**
  security: none
- pattern: /healthz/**
  security: none
- name: uiSecurity
  request-matcher:
    id: uiRequestMatcher
    class: org.cloudfoundry.identity.uaa.security.web.DelegatingRequestMatcher
    constructor-arg:
      list:
        bean:
        - class: org.springframework.security.web.util.AntPathRequestMatcher
          constructor-arg:
            value: /
        - class: org.springframework.security.web.util.AntPathRequestMatcher
          constructor-arg:
            value: /spring_security_login
        - class: org.springframework.security.web.util.AntPathRequestMatcher
          constructor-arg:
            value: /oauth/**
        - class: org.springframework.security.web.util.AntPathRequestMatcher
          constructor-arg:
            value: /login**
        - class: org.springframework.security.web.util.AntPathRequestMatcher
          constructor-arg:
            value: /logout.do*
  access-denied-page: /
  authentication-manager:
    id: authzAuthenticationMgr
    class: org.cloudfoundry.identity.uaa.authentication.manager.AuthzAuthenticationManager
    constructor-arg:
      id: userDatabase
      class: org.cloudfoundry.identity.uaa.user.JdbcUaaUserDatabase
      constructor-arg:
        id: jdbcTemplate
        class: org.springframework.jdbc.core.JdbcTemplate
        property:
          name: dataSource
          dataSource: OMITTED
      property:
      - name: defaultAuthorities
        id: defaultUserAuthorities
        set-class: java.util.HashSet
        value:
        - text: openid
        - text: scim.me
        - text: cloud_controller.read
        - text: cloud_controller.write
        - text: password.write
        - text: scim.userids
        - text: uaa.user
        - text: approvals.me
      - name: userAuthoritiesQuery
        value:
          text: select g.displayName from groups g, group_membership m where g.id
            = m.group_id and m.member_id = ?
    property:
      name: accountLoginPolicy
      bean:
        class: org.cloudfoundry.identity.uaa.authentication.manager.PeriodLockoutPolicy
        constructor-arg:
          id: jdbcAuditService
          class: org.cloudfoundry.identity.uaa.audit.JdbcFailedLoginCountingAuditService
          constructor-arg:
            dataSource: OMITTED
        property:
        - name: lockoutAfterFailures
          value: '5'
        - name: lockoutPeriodSeconds
          value: '300'
  intercept-url:
  - pattern: /login**
    access: IS_AUTHENTICATED_ANONYMOUSLY
  - pattern: /**
    access: IS_AUTHENTICATED_FULLY
  form-login:
    authentication-failure-url: /login?error=true
    login-page: /login
    login-processing-url: /login.do
    username-parameter: username
    default-target-url: /
    password-parameter: password
    authentication-details-source:
      id: authenticationDetailsSource
      class: org.cloudfoundry.identity.uaa.authentication.UaaAuthenticationDetailsSource
  logout:
    logout-url: /logout.do
    success-handler:
      id: logoutHandler
      class: org.springframework.security.web.authentication.logout.SimpleUrlLogoutSuccessHandler
      property:
      - name: targetUrlParameter
        value: redirect
      - name: defaultTargetUrl
        value: /
- name: denyAll
  use-expressions: 'true'
  create-session: stateless
  entry-point:
    id: http403EntryPoint
    class: org.springframework.security.web.authentication.Http403ForbiddenEntryPoint
  authentication-manager:
    id: emptyAuthenticationManager
  intercept-url:
    pattern: /**
    access: denyAll
